- name: Include vaulted variables
  include_vars: vault.yml
  tags: [docker-container, docker-mounts]

- name: Create mount directories
  include_role:
    name: dockermounts
    tasks_from: main
  vars:
    mounts:
    - { source: pihole/ }
    templates:
    - { src: conf/setupVars.conf.j2, dest: pihole/conf/setupVars.conf, mode: '644' }
    files:
    - { src: conf/custom.list,                    dest: pihole/conf/custom.list,                    mode: '644' }
    - { src: dnsmasq/04-pihole-static-dhcp.conf,  dest: pihole/dnsmasq/04-pihole-static-dhcp.conf,  mode: '644' }
    - { src: dnsmasq/05-pihole-custom-cname.conf, dest: pihole/dnsmasq/05-pihole-custom-cname.conf, mode: '644' }
  tags: [docker-mounts]

- name: Deploy Docker container
  include_role:
    name: dockercontainer
    tasks_from: default
  vars:
    container_basename: "pihole"
    container_image: "pihole/pihole"
    container_tag: "{{ pihole.version }}"
    capabilities:
    - NET_ADMIN
    - NET_RAW
    - NET_BIND_SERVICE
    - SYS_NICE
    network_mode: "host"
    dns_servers:
    - 127.0.0.1
    - 192.168.2.254
    environment_variables:
      TZ: "Europe/Amsterdam"
      WEBPASSWORD: "{{ pihole.admin_password }}"
      FTLCONF_REPLY_ADDR4: "{{ pihole.ipaddress }}"
    labels:
      diun.enable: "true"
      diun.watch_repo: "true"
      diun.include_tags: "^\\d{4}\\.\\d+(\\.\\d+)+$"
      diun.max_tags: "10"
    mounts:
    - { source: /dockermnt/pihole/conf,    target: /etc/pihole,    read_only: "no", type: bind }
    - { source: /dockermnt/pihole/dnsmasq, target: /etc/dnsmasq.d, read_only: "no", type: bind }
  register: container
  tags: [docker-container]

- name: "Restart PiHole"
  command: docker exec pihole_{{ pihole.version }} pihole restartdns
  when: "not container.changed | default(false) and (static_files.changed | default(false) or template_files.changed | default(false))"
  tags: [docker-container, docker-mounts]
